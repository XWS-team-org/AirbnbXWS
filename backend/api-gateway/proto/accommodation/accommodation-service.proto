syntax = "proto3";
option go_package = "proto/accommodation";
import "google/api/annotations.proto";

service AccommodationServiceRPC{
  rpc DeleteAllForHost(DeleteAllForHostRequest) returns (DeleteAllForHostResponse){
     option (google.api.http) = {
      delete: "/accommodation"
    };
  }
  rpc CreateAccommodation(CreateAccommodationRequest) returns (CreateAccommodationResponse){
     option (google.api.http) = {
      post: "/accommodation/new"
       body: "*"
    };
  }
  rpc ModifyAccommodation(ModifyAccommodationRequest) returns (ModifyAccommodationResponse){
     option (google.api.http) = {
      post: "/accommodation/modify"
    };
  }
  rpc SearchAccommodations(SearchAccommodationsRequest) returns (SearchAccommodationsResponse){
     option (google.api.http) = {
      post: "/accommodation/search"
      body: "*"
    };
  }
  rpc GetAccommodation (GetAccommodationRequest) returns (GetAccommodationResponse){
     option (google.api.http) = {
      get: "/accommodation/{id}"
    };
  }
  rpc SetReservationOption (SetReservationOptionRequest) returns (SetReservationOptionResponse){
     option (google.api.http) = {
      post: "/accommodation/reservation-option"
    };
  }

  rpc GetAllAccommodations (GetAllRequest) returns (GetAllResponse){
    option (google.api.http) = {
      get: "/accommodation"
    };
  }
}

message Address {
  string id = 1;
  string country = 2;
  string city = 3;
  string streetAddress = 4;
}

enum PaymentOption {
  PER_PERSON = 0;
  PER_UNIT = 1;
}

message Accommodation{
  string id = 1;
  string hostId = 2;
  string name = 3;
  Address address = 4;
  repeated string benefits = 5;
  repeated string pictures = 6;
  int32 minGuests = 7;
  int32 maxGuests = 8;
  int32 basePrice = 9;
  PaymentOption paymentOption = 10;
}

message AccommodationSearch{
  string id = 1;
  string hostId = 2;
  string name = 3;
  Address address = 4;
  repeated string benefits = 5;
  repeated string pictures = 6;
  int32 minGuests = 7;
  int32 maxGuests = 8;
  int32 basePrice = 9;
  int32 priceTotal = 10;
  string startDate = 11;
  string endDate = 12;
  PaymentOption paymentOption = 13;
}

message AccommodationRequest{
  string hostId = 1;
  string name = 2;
  Address address = 3;
  repeated string benefits = 4;
  repeated string pictures = 5;
  int32 minGuests = 6;
  int32 maxGuests = 7;
  int32 basePrice = 8;
  PaymentOption paymentOption = 9;
  string typeOfReservationConfirmation = 10;
}

message DeleteAllForHostRequest{
  string hostId = 1;
}

message DeleteAllForHostResponse{
  string response = 1;
}

message CreateAccommodationRequest{
  AccommodationRequest request = 1;
}

message CreateAccommodationResponse{
  string response = 1;
}

message ModifyAccommodationRequest{
  Accommodation accommodation = 1;
}

message ModifyAccommodationResponse{
  string response = 1;
}

message SearchAccommodationsRequest{
  string country = 1;
  string city = 2;
  string streetAddress = 3;
  string startDate = 4;
  string endDate = 5;
  int32 numberOfGuests = 6;
}

message SearchAccommodationsResponse{
  repeated AccommodationSearch accommodations = 1;
}

message GetAccommodationRequest{
  string id = 1;
}

message GetAccommodationResponse{
  Accommodation accommodation = 1;
}

message SetReservationOptionRequest{
  string option = 1;
}

message SetReservationOptionResponse{
  string response = 1;
}

message GetAllRequest {}

message GetAllResponse {
  repeated Accommodation accommodations = 1;
}
