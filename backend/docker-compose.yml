version: "3.8"

services:

  reservation_service:
    image: reservation_service
    container_name: reservation_service
    hostname: reservation_service
    build:
      context: ./ReservationService
      dockerfile: Dockerfile
    restart: always
    environment:
      RESERVATION_SERVICE_ADDRESS: ${RESERVATION_SERVICE_ADDRESS}
      RESERVATION_DB_URI: ${RESERVATION_DB_URI}
    networks:
      - network
    env_file:
      - ./.env


  accommodation_service:
    image: accommodation_service
    container_name: accommodation_service
    hostname: accommodation_service
    build:
      context: ./AccommodationService
      dockerfile: Dockerfile
    restart: always
    environment:
      ACCOMMODATION_SERVICE_ADDRESS: ${ACCOMMODATION_SERVICE_ADDRESS}
      ACCOMMODATION_DB_URI : ${ACCOMMODATION_DB_URI}
    networks:
      - network
    env_file:
      - ./.env

  user_service:
    image: user_service
    container_name: user_service
    hostname: user_service
    build:
      context: ./UserService
      dockerfile: Dockerfile
    restart: always
    environment:
      USER_SERVICE_ADDRESS: ${USER_SERVICE_ADDRESS}
      USER_DB_URI : ${USER_DB_URI}
    networks:
      - network
    env_file:
      - ./.env

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    hostname: api_gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    restart: always
    environment:
      USER_SERVICE_ADDRESS: user_service:8000
      ACCOMMODATION_SERVICE_ADDRESS: accommodation_service:8000
      RESERVATION_SERVICE_ADDRESS: reservation_service:8000
      GATEWAY_ADDRESS: ${GATEWAY_ADDRESS}
    depends_on:
      - user_service
      - accommodation_service
      - reservation_service
    networks:
      - network
    ports:
      - "8000:8000"
    env_file:
      - ./.env

networks:
  network:
    driver: bridge